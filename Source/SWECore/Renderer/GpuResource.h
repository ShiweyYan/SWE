#pragma once
#include "SWECore/SWECore.h"
#include "SWESystem/Object.h"

namespace SWE
{
	class SWECORE_API GpuResource: public Object
	{
		DECLEAR_RTTI
	public:
		enum GPU_BUFFER_USAGE
		{
			GPU_BUFFER_USAGE_DEFAULT = 0,
			GPU_BUFFER_USAGE_IMMUTABLE = 1,
			GPU_BUFFER_USAGE_DYNAMIC = 2,
			GPU_BUFFER_USAGE_STAGING = 3
		};

		enum BIND_FLAG
		{
			BF_BIND_VERTEX_BUFFER = 0x1L,
			BF_BIND_INDEX_BUFFER = 0x2L,
			BF_BIND_CONSTANT_BUFFER = 0x4L,
			BF_BIND_SHADER_RESOURCE = 0x8L,
			BF_BIND_STREAM_OUTPUT = 0x10L,
			BF_BIND_RENDER_TARGET = 0x20L,
			BF_BIND_DEPTH_STENCIL = 0x40L,
			BF_BIND_UNORDERED_ACCESS = 0x80L,
			BF_BIND_DECODER = 0x200L,
			BF_BIND_VIDEO_ENCODER = 0x400L
		};

		enum CPU_ACCESS_FLAG
		{
			CAF_CPU_ACCESS_WRITE = 0x10000L,
			CAF_CPU_ACCESS_READ = 0x20000L
		};

		enum RESOURCE_MISC_FLAG
		{
			RMF_RESOURCE_MISC_GENERATE_MIPS = 0x1L,
			RMF_RESOURCE_MISC_SHARED = 0x2L,
			RMF_RESOURCE_MISC_TEXTURECUBE = 0x4L,
			RMF_RESOURCE_MISC_DRAWINDIRECT_ARGS = 0x10L,
			RMF_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS = 0x20L,
			RMF_RESOURCE_MISC_BUFFER_STRUCTURED = 0x40L,
			RMF_RESOURCE_MISC_RESOURCE_CLAMP = 0x80L,
			RMF_RESOURCE_MISC_SHARED_KEYEDMUTEX = 0x100L,
			RMF_RESOURCE_MISC_GDI_COMPATIBLE = 0x200L,
			RMF_RESOURCE_MISC_SHARED_NTHANDLE = 0x800L,
			RMF_RESOURCE_MISC_RESTRICTED_CONTENT = 0x1000L,
			RMF_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE = 0x2000L,
			RMF_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER = 0x4000L,
			RMF_RESOURCE_MISC_GUARDED = 0x8000L,
			RMF_RESOURCE_MISC_TILE_POOL = 0x20000L,
			RMF_RESOURCE_MISC_TILED = 0x40000L
		};
	};

	SMART_POINTER(GpuResource)
}